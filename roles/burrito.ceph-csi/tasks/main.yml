---
- name: ceph-csi | create ceph-csi namespace
  kubernetes.core.k8s:
    state: present
    resource_definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: ceph-csi
        labels:
          kubernetes.io/metadata.name: ceph-csi
          pod-security.kubernetes.io/enforce: privileged
  become: true

- name: ceph-csi | delete ceph-csi artifacts directory
  ansible.builtin.file:
    path: "{{ artifacts_dir }}"
    state: absent

- name: ceph-csi | create ceph-csi artifacts directory
  ansible.builtin.file:
    path: "{{ artifacts_dir }}"
    state: directory

- name: ceph-csi | copy ceph-csi static files
  ansible.builtin.copy:
    dest: "{{ artifacts_dir }}/{{ item | basename }}"
    src: "{{ item }}"
    mode: "0644"
  with_fileglob:
    - "files/*"

- name: ceph-csi | get ceph cluster id
  ansible.builtin.command: >-
    ceph config get mon fsid
  register: result
  become: true

- name: ceph-csi | set fact for ceph cluster id
  ansible.builtin.set_fact:
    ceph_cluster_id: "{{ result.stdout }}"

- name: ceph-csi | get client.kube keyring
  ansible.builtin.command: >-
    ceph auth get-key client.kube
  register: result
  become: true

- name: ceph-csi | set fact for kube keyring
  ansible.builtin.set_fact:
    ceph_user_key: "{{ result.stdout }}"

- name: ceph-csi | templating ceph-csi template files
  ansible.builtin.template:
    dest: "{{ item.dest }}"
    src: "{{ item.dest | basename }}.j2"
    mode: "0644"
  loop: "{{ template_files }}"

- name: ceph-csi | apply ceph-csi manifests
  kubernetes.core.k8s:
    src: "{{ item }}"
    state: present
    wait: true
    wait_timeout: 300
  with_fileglob:
    - "{{ artifacts_dir }}/[0-9]*"
  become: true

- name: ceph-csi | wait until registry is running.
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - k8s-app = registry
    namespace: kube-system
    wait: true
    wait_sleep: 5
    wait_timeout: "{{ registry_ready_timeout }}"
  become: true
  register: registry_pod
  when:
    - storage_backends[0] == 'ceph'
    - registry_enabled

- name: fail if registry is not running
  ansible.builtin.fail:
    msg: >-
      Registry is not running after {{ registry_ready_timeout }} seconds.
      Give up!
  when:
    - storage_backends[0] == 'ceph'
    - registry_enabled
    - registry_pod.resources[0].status.phase != 'Running'
...
