---
- name: change kubeconfig file permission
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    recurse: yes
  with_items:
    - "{{rke2_config_directory}}"
    - "/var/lib/rancher/rke2/agent/etc"

- name: add kubectl and Root directory to path
  become: yes
  lineinfile: >
    dest=/etc/environment
    state=present
    backrefs=yes
    regexp='PATH=(["]*)((?!.*?{{rke2_bin_directory}}).*?)(["]*)$'
    line="PATH=\1\2:{{rke2_bin_directory}}:{{rke2_root_directory}}/bin\3"
  when: ansible_distribution == 'Ubuntu'

- name: add kubeconfig and cri_config to env variables
  become: yes
  lineinfile:
    path: /etc/environment
    line: "{{ item }}"
  with_items:
    - "KUBECONFIG={{rke2_config_directory}}/rke2.yaml"
    - "CRI_CONFIG_FILE=/var/lib/rancher/rke2/agent/etc/crictl.yaml"
  when: ansible_distribution == 'Ubuntu'

- name: add env variables to script
  become: yes
  lineinfile:
    dest: /etc/profile.d/env.sh
    create: yes
    state: present
    line: "{{ item }}"
  with_items:
    - "export PATH=$PATH:{{rke2_bin_directory}}:{{rke2_root_directory}}/bin"
    - "export KUBECONFIG={{rke2_config_directory}}/rke2.yaml"
    - "export CRI_CONFIG_FILE=/var/lib/rancher/rke2/agent/etc/crictl.yaml"
  when: (ansible_distribution == 'CentOS' or ansible_os_family|lower == 'suse' or ansible_os_family|lower == 'redhat')

- set_fact:
    temp_dir: /tmp/env

- name: create temp folder
  file:
    path: "{{ temp_dir }}"
    state: directory
    mode: 0755

- name: enable env | copy env script
  copy:
    src: "{{playbook_dir}}/script/set_env.sh"
    dest: "{{temp_dir}}"
    mode: 0755

- name: enable env for current session
  become: yes
  shell: |
    cd "{{temp_dir}}"
    ./set_env.sh
  async: 60
  poll: 0

- name: wait 300 seconds for target connection to become reachable/usable
  wait_for_connection:
    timeout: 300

- name: delete temp folder
  file:
    path: "{{ temp_dir }}"
    state: absent


- set_fact:
    modules: ["nfs", "nfsd"]

- include_tasks: load_kernel_modules.yaml
  run_once: true
  loop: "{{ groups['kube-cluster'] }}"
  loop_control:
    loop_var: node 
