---
- name: Setup | create protection domain
  ansible.builtin.shell: >-
    scli --login --p12_path {{ mdm_certs.client }} \
      --p12_password '{{ mdm_password }}' && \
    scli --add_protection_domain \
      --protection_domain_name {{ protection_domain_name }}
  register: res
  delegate_to: "{{ groups['mdm'][0] }}"
  run_once: true
  failed_when: res.rc not in [0, 7]
  changed_when: res.rc == 0

- name: Setup | create storage pool
  ansible.builtin.shell: >-
    scli --login --p12_path {{ mdm_certs.client }} \
      --p12_password '{{ mdm_password }}' && \
    scli --add_storage_pool \
      --protection_domain_name {{ protection_domain_name }} \
      --media_type {{ media_type }} \
      --storage_pool_name {{ storage_pool_name }}
  register: res
  delegate_to: "{{ groups['mdm'][0] }}"
  run_once: true
  failed_when: res.rc not in [0, 7]
  changed_when: res.rc == 0

- name: Setup | modify spare policy
  ansible.builtin.shell: >-
    scli --login --p12_path {{ mdm_certs.client }} \
      --p12_password '{{ mdm_password }}' && \
    scli --modify_spare_policy \
      --protection_domain_name {{ protection_domain_name }} \
      --storage_pool_name {{ storage_pool_name }} \
      --spare_percentage {{ spare_percentage }} \
      --i_am_sure
  delegate_to: "{{ groups['mdm'][0] }}"
  run_once: true

- name: Setup | create SDS
  ansible.builtin.shell: >-
    scli --login --p12_path {{ mdm_certs.client }} \
      --p12_password '{{ mdm_password }}' && \
    scli --add_sds \
      --sds_name {{ item }}-sds \
      --sds_ip {% for siface in hostvars[item].storage_iface_names %}hostvars[item]['ansible_'+siface].ipv4.address }}{% if not loop.last %},{% endif %}{% endfor %} \
      --protection_domain_name {{ protection_domain_name }} \
      --storage_pool_name {{ storage_pool_name }}
  delegate_to: "{{ groups['mdm'][0] }}"
  run_once: true
  loop: "{{ groups['sds'] }}"

- name: Setup | add devices to each SDS
  ansible.builtin.shell: >-
    scli --login --p12_path {{ mdm_certs.client }} \
      --p12_password '{{ mdm_password }}' && \
    scli --add_sds_device \
      --sds_name {{ item.0 }}-sds \
      --storage_pool_name {{ storage_pool_name }} \
      --device_name {{ item.0 }}-{{ item.1|basename }} \
      --device_path {{ item.1 }} \
      --media_type {{ media_type }} \
      --force_device_takeover
  register: pfx_result
  until: pfx_result is not failed
  retries: 3
  delay: 3
  delegate_to: "{{ groups['mdm'][0] }}"
  run_once: true
  loop: "{{ groups['sds'] | product(sds_devices) | list }}"
...
