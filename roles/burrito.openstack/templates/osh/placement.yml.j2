---
images:
  tags:
    placement: "{{ docker_image_repo }}/jijisa/placement:2024.1-ubuntu_jammy"
    ks_user: "{{ docker_image_repo }}/jijisa/heat:2024.1-ubuntu_jammy"
    ks_service: "{{ docker_image_repo }}/jijisa/heat:2024.1-ubuntu_jammy"
    ks_endpoints: "{{ docker_image_repo }}/jijisa/heat:2024.1-ubuntu_jammy"
    db_init: "{{ docker_image_repo }}/jijisa/heat:2024.1-ubuntu_jammy"
    db_drop: "{{ docker_image_repo }}/jijisa/heat:2024.1-ubuntu_jammy"
    placement_db_sync: "{{ docker_image_repo }}/jijisa/placement:2024.1-ubuntu_jammy"
    dep_check: "{{ quay_image_repo }}/airshipit/kubernetes-entrypoint:latest-ubuntu_jammy"

pod:
  replicas:
    api: 1

network:
  api:
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "https"
conf:
  software:
    apache2:
      binary: apache2
      start_parameters: -DFOREGROUND
      site_dir: /etc/apache2/sites-enabled
      conf_dir: /etc/apache2/conf-enabled
      mods_dir: /etc/apache2/mods-available
      a2enmod:
        - ssl
      a2dismod: null
  db_acl:
    enabled: true
  placement:
    keystone_authtoken:
      cafile: /etc/placement/certs/ca.crt
  wsgi_placement: |
    {% raw %}{{- $portInt := tuple "placement" "service" "api" $ | include "helm-toolkit.endpoints.endpoint_port_lookup" }}{% endraw +%}
    Listen {% raw %}{{ $portInt }}{% endraw +%}
    <VirtualHost *:{% raw %}{{ $portInt }}{% endraw %}>
      ServerName {% raw %}{{ printf "%s.%s.svc.%s" "placement-api" .Release.Namespace .Values.endpoints.cluster_domain_suffix }}{% endraw +%}
      WSGIDaemonProcess placement-api processes=1 threads=1 user=placement group=placement display-name=%{GROUP}
      WSGIProcessGroup placement-api
      WSGIScriptAlias / /var/www/cgi-bin/placement/placement-api
      WSGIApplicationGroup %{GLOBAL}
      WSGIPassAuthorization On
      <IfVersion >= 2.4>
        ErrorLogFormat "%{cu}t %M"
      </IfVersion>
      SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
      ErrorLog /dev/stdout
      CustomLog /dev/stdout combined env=!forwarded
      CustomLog /dev/stdout proxy env=forwarded
      SSLEngine on
      SSLCertificateFile      /etc/placement/certs/tls.crt
      SSLCertificateKeyFile   /etc/placement/certs/tls.key
      SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
      SSLCipherSuite          ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
      SSLHonorCipherOrder     on
    </VirtualHost>
  placement_api_uwsgi:
    uwsgi:
      processes: 1
      add-header: "Connection: close"
      buffer-size: 65535
      die-on-term: true
      enable-threads: true
      exit-on-reload: false
      hook-master-start: unix_signal:15 gracefully_kill_them_all
      lazy-apps: true
      log-x-forwarded-for: true
      master: true
      procname-prefix-spaced: "placement-api:"
      route-user-agent: '^kube-probe.* donotlog:'
      thunder-lock: true
      worker-reload-mercy: 80
      wsgi-file: /var/lib/openstack/bin/placement-api

endpoints:
  identity:
    auth:
      admin:
        cacert: /etc/ssl/certs/openstack-helm.crt
        username: admin
        password: {{ os_admin_password }}
      placement:
        cacert: /etc/ssl/certs/openstack-helm.crt
        username: placement
        password: {{ placement.password }}
    scheme:
      default: https
    port:
      api:
        default: 8443
        public: 8443
  placement:
    host_fqdn_override:
      default:
        tls:
          secretName: placement-tls-api
          duration: {{ tls.duration }}
          renewBefore: {{ tls.renewBefore }}
          issuerRef:
            name: ca-issuer
            kind: ClusterIssuer
    scheme:
      default: https
      service: https
    port:
      api:
        public: 8443
        admin: 8778
  oslo_db:
    auth:
      admin:
        username: root
        password: {{ mariadb.admin_password }}
      placement:
        username: placement
        password: {{ placement.password }}
      nova_api:
        username: nova
        password: {{ nova.password }}
manifests:
  certificates: true
...
