---
images:
  tags:
    db_init: {{ docker_image_repo }}/jijisa/heat:2024.1-ubuntu_jammy
    db_drop: {{ docker_image_repo }}/jijisa/heat:2024.1-ubuntu_jammy
    horizon_db_sync: {{ docker_image_repo }}/jijisa/horizon:2024.1-ubuntu_jammy
    horizon: {{ docker_image_repo }}/jijisa/horizon:2024.1-ubuntu_jammy
    dep_check: {{ quay_image_repo }}/airshipit/kubernetes-entrypoint:latest-ubuntu_jammy

pod:
  replicas:
    server: {{ pod.replicas }}
network:
  dashboard:
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "https"
  node_port:
    enabled: true
    port: 31000
  api:
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 102400M
conf:
  software:
    apache2:
      a2enmod:
        - headers
        - rewrite
        - ssl
  horizon:
    apache: |
      <IfVersion < 2.4>
      Listen 0.0.0.0:{% raw %}{{ tuple "dashboard" "internal" "web" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}{% endraw +%}
      </IfVersion>
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
      LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" proxy

      SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
      CustomLog /dev/stdout combined env=!forwarded
      CustomLog /dev/stdout proxy env=forwarded

      <VirtualHost *:80>
        ServerName horizon-int.openstack.svc.cluster.local
        RewriteEngine On
        RewriteCond %{HTTPS} off
        RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R,L]
      </Virtualhost>

      <VirtualHost *:{% raw %}{{ tuple "dashboard" "internal" "web" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}{% endraw %}>
        ServerName horizon-int.openstack.svc.cluster.local
        WSGIScriptReloading On
        WSGIDaemonProcess horizon-http processes=5 threads=1 user=horizon group=horizon display-name=%{GROUP} python-path=/var/lib/kolla/venv/lib/python2.7/site-packages
        WSGIProcessGroup horizon-http
        WSGIScriptAlias / /var/www/cgi-bin/horizon/django.wsgi
        WSGIPassAuthorization On

        RewriteEngine On
        RewriteCond %{REQUEST_METHOD} !^(POST|PUT|GET|DELETE|PATCH)
        RewriteRule .* - [F]

        <Location "/">
          Require all granted
        </Location>

        Alias /static /var/www/html/horizon
        <Location "/static">
          SetHandler static
        </Location>

        <IfVersion >= 2.4>
          ErrorLogFormat "%{cu}t %M"
        </IfVersion>
        ErrorLog /dev/stdout
        TransferLog /dev/stdout

        SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
        CustomLog /dev/stdout combined env=!forwarded
        CustomLog /dev/stdout proxy env=forwarded

        ErrorLog /dev/stdout
        SSLEngine on
        SSLCertificateFile      /etc/openstack-dashboard/certs/tls.crt
        SSLCertificateKeyFile   /etc/openstack-dashboard/certs/tls.key
        SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
        SSLCipherSuite          ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
        SSLHonorCipherOrder     on
      </VirtualHost>
    local_settings:
      config:
        use_ssl: "True"
        csrf_cookie_secure: "True"
        csrf_cookie_httponly: "True"
        enforce_password_check: "True"
        session_cookie_secure: "True"
        session_cookie_httponly: "True"
        timezone: "{{ horizon.timezone }}"
endpoints:
  identity:
    name: keystone
    auth:
      admin:
        cacert: /etc/ssl/certs/openstack-helm.crt
        username: admin
        password: {{ os_admin_password }}
    scheme:
      default: https
    port:
      api:
        default: 8443
        public: 8443
  dashboard:
    host_fqdn_override:
      default:
        tls:
          secretName: horizon-tls-web
          duration: {{ tls.duration }}
          renewBefore: {{ tls.renewBefore }}
          issuerRef:
            name: ca-issuer
            kind: ClusterIssuer
    scheme:
      default: https
      public: https
    port:
      web:
        default: 443
        public: 443
  ingress:
    port:
      ingress:
        default: 8443
  oslo_db:
    auth:
      admin:
        username: root
        password: {{ mariadb.admin_password }}
      horizon:
        username: horizon
        password: {{ horizon.password }}
manifests:
  certificates: true
...
