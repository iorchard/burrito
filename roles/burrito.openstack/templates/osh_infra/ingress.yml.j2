---
images:
  tags:
    entrypoint: {{ quay_image_repo }}/airshipit/kubernetes-entrypoint:v1.0.0
    ingress: {{ kube_image_repo }}/ingress-nginx/controller:v1.8.2
    ingress_module_init: {{ docker_image_repo }}/jijisa/neutron:2023.1-ubuntu_jammy
    ingress_routed_vip: {{ docker_image_repo }}/jijisa/neutron:2023.1-ubuntu_jammy
    error_pages: {{ kube_image_repo }}/defaultbackend:1.4
    dep_check: {{ quay_image_repo }}/airshipit/kubernetes-entrypoint:v1.0.0

deployment:
  type: StatefulSet
  cluster:
    class: "nginx"
    ingressClassByName: false
    controllerClass: "k8s.io/nginx-ingress"
network:
  host_namespace: true
monitoring:
  prometheus:
    enabled: false
    ingress_exporter:
      scrape: false
pod:
  replicas:
    ingress: {{ groups['controller-node']|length }}
    error_page: 1
endpoints:
  ingress:
    host_fqdn_override:
      default:
        tls:
          secretName: ingress-tls-direct
          commonName: ingress
          duration: {{ tls.duration }}
          renewBefore: {{ tls.renewBefore }}
          issuerRef:
            name: ca-issuer
            kind: ClusterIssuer
    port:
      http:
        default: 8080
      https:
        default: 8443
conf:
  default_ssl_certificate:
    enabled: true
    name: "ingress-tls-direct"
    namespace: "openstack"
client_body_volume:
  access_modes: "ReadWriteOnce"
  size: {{ ingress.volume_size }}
  class_name: {{ storageclass_name }}
manifests:
  certificates: true
  pvc_client_body: false
...
