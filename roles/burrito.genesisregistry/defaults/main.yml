---
# TLS
tls_tmp_dir: "/tmp/genesis_registry"
tls_dir: "/etc/ssl/registry"
tls_ca:
  key: "{{ tls_dir }}/ca-key.pem"
  crt: "{{ tls_dir }}/ca.pem"
tls_server:
  key: "{{ tls_dir }}/genesis-registry-key.pem"
  crt: "{{ tls_dir }}/genesis-registry.pem"
tls_subj: 
  organization_name: "Genesis Registry"
  common_name: "genesis-registry"
tls_days: "+3650d"
tls_san: "IP:{{ keepalived_vip }},{% for s in groups['kube_control_plane'] %}IP:{{ hostvars[s].ip }}{% if not loop.last %},{% endif %}{% endfor %}"

# haproxy
haproxy_conf_dir: "/etc/haproxy"
service_conf:
  - {dest: "{{ haproxy_conf_dir }}/conf.d/registry.cfg", owner: "root", group: "haproxy", mode: "0640"}

image_pull_cmd: "{{ bin_dir }}/ctr -n k8s.io images pull -k"
image_tag_cmd: "{{ bin_dir }}/ctr -n k8s.io images tag --force"
image_push_cmd: "{{ bin_dir }}/ctr -n k8s.io images push -k"

# hitachi openshift csi driver version
hitachi_namespace: "hspc-operator-system"
hspc_operator_version: "v1.12.1"
hspc_csi_driver_version: "v3.12.1"
osecsi_version: "v4.11.0"

genesis_registry:
  root_dir: "/var/lib/registry"
  secret: "{{ lookup('community.general.random_string', length=12, base64=True) }}"
  conf: "/etc/genesis_registry.conf"
  common:
    - "jijisa/asklepios:{{ asklepios.version }}"
    - "library/registry:{{ registry_version }}"
    - "kube-apiserver:{{ kube_version }}"
    - "kube-controller-manager:{{ kube_version }}"
    - "kube-proxy:{{ kube_version }}"
    - "kube-scheduler:{{ kube_version }}"
    - "calico/cni:{{ calico_version }}"
    - "calico/kube-controllers:{{ calico_version }}"
    - "calico/node:{{ calico_version }}"
    - "calico/pod2daemon-flexvol:{{ calico_version }}"
    - "sig-storage/csi-attacher:{{ csi_attacher_version }}"
    - "sig-storage/csi-node-driver-registrar:{{ csi_node_driver_registrar_version }}"
    - "sig-storage/csi-provisioner:{{ csi_provisioner_version }}"
    - "sig-storage/csi-resizer:{{ csi_resizer_version }}"
    - "sig-storage/csi-snapshotter:{{ csi_snapshotter_version }}"
  ceph:
    - "cephcsi/cephcsi:{{ cephcsi_version }}"
  netapp:
    - "netapp/trident:{{ trident_version }}"
    - "netapp/trident-autosupport:{{ trident_version[:5] }}"
  powerflex:
    - "dellemc/csi-vxflexos:{{ pfx_version }}"
    - "sig-storage/snapshot-controller:{{ pfx_snapshot_controller_version }}"
  hitachi:
    - "hitachi/hspc-operator:{{ hspc_operator_version }}"
    - "hitachi/hspc-csi-driver:{{ hspc_csi_driver_version }}"
    - "openshift4/ose-csi-external-attacher:{{ osecsi_version }}"
    - "openshift4/ose-csi-external-provisioner:{{ osecsi_version }}"
    - "openshift4/ose-csi-external-resizer-rhel8:{{ osecsi_version }}"
    - "openshift4/ose-csi-external-snapshotter-rhel8:{{ osecsi_version }}"
    - "openshift4/ose-csi-livenessprobe:{{ osecsi_version }}"
    - "openshift4/ose-csi-node-driver-registrar:{{ osecsi_version }}"
  primera:
    - "hpestorage/alletra-9000-primera-and-3par-csp:{{ primera_csi_version }}"
    - "hpestorage/csi-driver:{{ primera_csi_version }}"
    - "hpestorage/csi-extensions:{{ primera_csi_extension_version }}"
    - "hpestorage/volume-group-provisioner:{{ primera_volume_group_provisioner_version }}"
    - "hpestorage/volume-group-snapshotter:{{ primera_volume_group_snapshotter_version }}"
    - "hpestorage/volume-mutator:{{ primera_volume_mutator_version }}"
  purestorage:
    - "portworx/oci-monitor:{{ portworx_oci_monitor_version }}"
    - "portworx/px-enterprise:{{ portworx_version }}"
    - "portworx/px-operator:{{ portworx_px_operator_version }}"
    - "pause:{{ portworx_pause_version }}"
    - "sig-storage/snapshot-controller:{{ snapshot_contoller_version }}"
  addr: "{{ hostvars[inventory_hostname].ip }}:{{ genesis_registry_port }}"

genesis_images: "{{ genesis_registry.common + genesis_registry[storage_backends[0]] }}"
keepalived_vip: ~
balance: roundrobin
inter: 2s
rise: 2
fall: 3

# kubernetes patch variables
k8s_manifest_dir: "/etc/kubernetes/manifests"
k8s_services:
  - {name: "kube-apiserver", port: 6443}
  - {name: "kube-controller-manager", port: 10257}
  - {name: "kube-scheduler", port: 10259}

# calico patch variables
calico_artifacts_dir: "/etc/kubernetes"
calico_manifests:
  - "{{ calico_artifacts_dir }}/calico-kube-controllers.yml"
  - "{{ calico_artifacts_dir }}/calico-node.yml"

# asklepios deployment patch variables
asklepios_artifacts_dir: "{{ ansible_env.HOME }}/asklepios-artifacts"
asklepios_manifests:
  - "{{ asklepios_artifacts_dir }}/deployment.yaml"

# csi_rbdplugin daemonset patch variables
ceph_csi_artifacts_dir: "{{ ansible_env.HOME }}/ceph-csi-artifacts"
ceph_csi_manifests:
  - "{{ ceph_csi_artifacts_dir }}/06-csi-rbdplugin-provisioner.yaml"
  - "{{ ceph_csi_artifacts_dir }}/07-csi-rbdplugin.yaml"

# trident-csi deployment patch variables
trident_deploy_images:
  - "netapp/trident:{{ trident_version }}"
  - "netapp/trident-autosupport:{{ trident_version[:5] }}"
  - "sig-storage/csi-provisioner:{{ csi_provisioner_version }}"
  - "sig-storage/csi-attacher:{{ csi_attacher_version }}"
  - "sig-storage/csi-resizer:{{ csi_resizer_version }}"
  - "sig-storage/csi-snapshotter:{{ csi_snapshotter_version }}"
trident_deploy: |
  {% for v in trident_deploy_images -%}
  {op: replace, path: "/spec/template/spec/containers/{{ loop.index0 }}/image", value: "{{ containerd_insecure_registries.genesis_registry }}/{{ v }}"}
  {% endfor -%}
trident_deploy_patch_list: "{{ trident_deploy.splitlines()|map('from_yaml')|list }}"

# trident-csi daemonset patch variables
trident_daemonset_images:
  - "netapp/trident:{{ trident_version }}"
  - "sig-storage/csi-node-driver-registrar:{{ csi_node_driver_registrar_version }}"
trident_daemonset: |
  {% for v in trident_daemonset_images -%}
  {op: replace, path: "/spec/template/spec/containers/{{ loop.index0 }}/image", value: "{{ containerd_insecure_registries.genesis_registry }}/{{ v }}"}
  {% endfor -%}
trident_daemonset_patch_list: "{{ trident_daemonset.splitlines()|map('from_yaml')|list }}"

# vxflexos deploy patch variables
vxflexos_deploy_images:
  - "sig-storage/csi-attacher:{{ csi_attacher_version }}"
  - "sig-storage/csi-provisioner:{{ csi_provisioner_version }}"
  - "sig-storage/csi-snapshotter:{{ csi_snapshotter_version }}"
  - "sig-storage/csi-resizer:{{ csi_resizer_version }}"
  - "dellemc/csi-vxflexos:{{ pfx_version }}"
vxflexos_deploy: |
  {% for v in vxflexos_deploy_images -%}
  {op: replace, path: "/spec/template/spec/containers/{{ loop.index0 }}/image", value: "{{ containerd_insecure_registries.genesis_registry }}/{{ v }}"}
  {% endfor -%}
vxflexos_deploy_patch_list: "{{ vxflexos_deploy.splitlines()|map('from_yaml')|list }}"
  
# snapshot-controller patch variables
snapshot_controller_deploy_images:
  - "sig-storage/snapshot-controller:{{ pfx_snapshot_controller_version }}"
snapshot_controller_deploy: |
  {% for v in snapshot_controller_deploy_images -%}
  {op: replace, path: "/spec/template/spec/containers/{{ loop.index0 }}/image", value: "{{ containerd_insecure_registries.genesis_registry }}/{{ v }}"}
  {% endfor -%}
snapshot_controller_deploy_patch_list: "{{ snapshot_controller_deploy.splitlines()|map('from_yaml')|list }}"

# hitachi deployment patch variables
hspc_operator_deploy_images:
  - "hitachi/hspc-operator:{{ hspc_operator_version }}"
hspc_operator_deploy: |
  {% for v in hspc_operator_deploy_images -%}
  {op: replace, path: "/spec/template/spec/containers/{{ loop.index0 }}/image", value: "{{ containerd_insecure_registries.genesis_registry }}/{{ v }}"}
  {% endfor -%}
hspc_operator_deploy_patch_list: "{{ hspc_operator_deploy.splitlines()|map('from_yaml')|list }}"

hspc_csi_controller_deploy_images:
  - "openshift4/ose-csi-external-provisioner:{{ osecsi_version }}"
  - "openshift4/ose-csi-external-attacher:{{ osecsi_version }}"
  - "openshift4/ose-csi-external-resizer-rhel8:{{ osecsi_version }}"
  - "openshift4/ose-csi-external-snapshotter-rhel8:{{ osecsi_version }}"
  - "openshift4/ose-csi-livenessprobe:{{ osecsi_version }}"
  - "hitachi/hspc-csi-driver:{{ hspc_csi_driver_version }}"
hspc_csi_controller_deploy: |
  {% for v in hspc_csi_controller_deploy_images -%}
  {op: replace, path: "/spec/template/spec/containers/{{ loop.index0 }}/image", value: "{{ containerd_insecure_registries.genesis_registry }}/{{ v }}"}
  {% endfor -%}
hspc_csi_controller_deploy_patch_list: "{{ hspc_csi_controller_deploy.splitlines()|map('from_yaml')|list }}"

# hspc-csi-node daemonset patch variables
hspc_csi_daemonset_images:
  - "openshift4/ose-csi-node-driver-registrar:{{ osecsi_version }}"
  - "hitachi/hspc-csi-driver:{{ hspc_csi_driver_version }}"
hspc_csi_daemonset: |
  {% for v in hspc_csi_daemonset_images -%}
  {op: replace, path: "/spec/template/spec/containers/{{ loop.index0 }}/image", value: "{{ containerd_insecure_registries.genesis_registry }}/{{ v }}"}
  {% endfor -%}
hspc_csi_daemonset_patch_list: "{{ hspc_csi_daemonset.splitlines()|map('from_yaml')|list }}"

# hspc_v1_hspc
artifacts_dir: "{{ ansible_env.HOME }}/hitachi-artifacts"

# primera
primera_artifacts_dir: "{{ ansible_env.HOME }}/primera-artifacts"
primera_manifests:
  - "{{ primera_artifacts_dir }}/csi-driver/3par-primera-csp.yaml"
  - "{{ primera_artifacts_dir }}/csi-driver/hpe-csi-k8s.yaml"

# purestorage 
purestorage_artifacts_dir: "{{ ansible_env.HOME }}/purestorage-artifacts"
purestorage_manifests:
  - "{{ purestorage_artifacts_dir }}/portworx_operator.yml"
  - "{{ purestorage_artifacts_dir }}/portworx_storagecluster.yml"
...
