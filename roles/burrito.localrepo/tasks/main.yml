---
- name: Local Repo | clean up burrito artifacts directory
  ansible.builtin.file:
    path: "{{ artifacts_dir }}"
    state: absent
  delegate_to: localhost
  run_once: true

- name: Local Repo | create burrito artifacts directory
  ansible.builtin.file:
    path: "{{ artifacts_dir }}"
    state: directory
  delegate_to: localhost
  run_once: true

- name: Local Repo | templating template files
  ansible.builtin.template:
    dest: "{{ item.dest }}"
    src: "{{ item.dest | basename }}.j2"
    mode: "0644"
  loop: "{{ template_files }}"
  delegate_to: localhost
  run_once: true

- name: Local Repo | apply localrepo manifests
  kubernetes.core.k8s:
    src: "{{ item }}"
    state: present
    wait: true
  with_fileglob:
    - "{{ artifacts_dir }}/[0-9]*"
  become: true
  delegate_to: localhost
  run_once: true

- name: Local Repo | get localrepo pod name
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "{{ localrepo.namespace }}"
    label_selectors:
      - "k8s-app=localrepo"
  register: localrepo_pod
  become: true
  delegate_to: localhost
  run_once: true

- name: Local Repo | debug localrepo pod information
  ansible.builtin.debug:
    msg: "{{ localrepo_pod.resources[0].metadata.name }}"
  delegate_to: localhost
  run_once: true

- name: Local Repo | check package src directory exists
  ansible.builtin.file:
    path: "{{ pkg_src }}"
    state: directory
  check_mode: true
  register: is_pkg_src
  delegate_to: localhost
  run_once: true
  
- name: Local Repo | copy packages to localrepo pod
  ansible.builtin.command: >-
    kubectl -n {{ localrepo.namespace }} cp {{ pkg_src }} \
      {{ localrepo_pod.resources[0].metadata.name }}:{{ pkg_dst }}
  become: true
  when: not is_pkg_src.changed
  delegate_to: localhost
  run_once: true

- name: Local Repo | check files src directory exists
  ansible.builtin.file:
    path: "{{ files_src }}"
    state: directory
  check_mode: true
  register: is_files_src
  delegate_to: localhost
  run_once: true
  
- name: Local Repo | copy files to localrepo pod
  ansible.builtin.command: >-
    kubectl -n {{ localrepo.namespace }} cp {{ files_src }} \
      {{ localrepo_pod.resources[0].metadata.name }}:{{ files_dst }}
  become: true
  when: not is_files_src.changed
  delegate_to: localhost
  run_once: true

- name: Local Repo | take down offline services
  ansible.builtin.shell: >-
    ./offline_services.sh --down repo
  args:
    chdir: "{{ playbook_dir }}/scripts"
  become: true
  register: res
  failed_when: res.rc not in [0, 10]
  delegate_to: localhost
  run_once: true

- name: Main | include haproxy setup tasks
  ansible.builtin.include_tasks: "haproxy_setup.yml"
...
